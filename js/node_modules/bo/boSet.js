/*
 * Copyright (C) 2015,2016 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of BJO2.
 *
 * BJO2 is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

"use strict";

var _ = require('underscore');
var async = require('async');
var m_dao = require('dao/daoSet.js');
var m_bo = require('bo/bo.js');
var m_bo_primaryBo = require('bo/primaryBo.js');
var m_bjoo = require('BJOObject.js');
var m_sql_db = require('sql/db.js');
var m_dao_daoSet = require('dao/daoSet.js');
var m_sql_conditionSet = require('sql/conditionSet.js');

function BoSet(/* m_sql_db.DB */ db, /*dao_daoSet*/ daoSet, /*(optional)bo_bo function()*/ constructor) {
    m_bjoo.BJOObject.call(this);
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 3; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            if ( !(db instanceof m_sql_db.DB) ) { throw new Error('Typecheck failure: db should be of class m_sql_db.DB: ' + db); }
            if ( !(daoSet instanceof m_dao_daoSet.DaoSet) ) { throw new Error('Typecheck failure: daoSet should be of class m_dao_daoSet.DaoSet: ' + daoSet); }
            if ( !(constructor instanceof Function) ) { throw new Error('Typecheck failure: constructor should be of class Function: ' + constructor); }
        /* @DEVELOMPENT } */
        this._db = db;
        this._daoSet = daoSet;
        this._constructor = constructor;
        this._willCalculateDetailCalcFields = false;
        this._willCalculateAggregatedCalcFields = false;
    } 
}

function boSet(/* m_sql_db.DB */ db, /*dao_daoSet*/ daoSet, /*(optional)bo_bo function()*/ constructor) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            var ARGLEN = 3; if ( arguments.length !== ARGLEN ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + ARGLEN); } 
            if ( !(db instanceof m_sql_db.DB) ) { throw new Error('Typecheck failure: db should be of class m_sql_db.DB: ' + db); }
            if ( !(daoSet instanceof m_dao_daoSet.DaoSet) ) { throw new Error('Typecheck failure: daoSet should be of class m_dao_daoSet.DaoSet: ' + daoSet); }
            if ( !(constructor instanceof Function) ) { throw new Error('Typecheck failure: constructor should be of class Function: ' + constructor); }
        /* @DEVELOMPENT } */
        return new BoSet(db, daoSet, constructor);
    } else {
        return new BoSet();
    }

}


BoSet.prototype = new m_bjoo.BJOObject();
BoSet.prototype.constructor = BoSet;

/*getter*/BoSet.prototype.daoSet = function() {
    return this._daoSet;
};

BoSet.prototype.willCalculateDetailCalcFields = function(willCalculateDetailCalcFields) {
    if ( typeof(willCalculateDetailCalcFields) !== 'undefined' ) {
        this._willCalculateDetailCalcFields = willCalculateDetailCalcFields;
        return this;
    }
    return this._willCalculateDetailCalcFields;
};

BoSet.prototype.willCalculateAggregatedCalcFields = function(willCalculateAggregatedCalcFields) {
    if ( typeof(willCalculateAggregatedCalcFields) !== 'undefined' ) {
        this._willCalculateAggregatedCalcFields = willCalculateAggregatedCalcFields;
        return this;
    }
    return this._willCalculateAggregatedCalcFields;
};

/**
 * returns a pure, unloaded bo
 */
/*bo.BO*/BoSet.prototype.templateBo = function() {
    return this._constructor.call({}, this._db).dao(this._daoSet.templateDao()); 
};

BoSet.prototype.loadAllByConditions = function(/* m_sql_conditionSet.ConditionSet */ conditions, /* Function */ callback) {
    /* @DEVELOPMENT { */
        if ( arguments.length !== 2 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + 2); }
        if ( !(conditions instanceof m_sql_conditionSet.ConditionSet) ) { throw new Error('Typecheck failure: conditions should be of class m_sql_conditionSet.ConditionSet: ' + conditions); }
        if ( !(callback instanceof Function) ) { throw new Error('Typecheck failure: callback should be of class Function: ' + callback); }
    /* @DEVELOMPENT } */

    var calculateDetailCalcFields = this._willCalculateDetailCalcFields && ( this._constructor.call({}) instanceof m_bo_primaryBo.PrimaryBo );
    this._daoSet.willCalculateDetailCalcFields(calculateDetailCalcFields)
        .willCalculateAggregatedCalcFields(this._willCalculateAggregatedCalcFields);
    this._daoSet.loadAllByConditions(conditions, function(err, daos, aggregateDao) {
        if (err) return callback(err);
        var bos = _(daos).map(function(dao) { 
            var bo = this._constructor.call({}, this._db); 
            bo.dao(dao);
            bo._fieldValuesFromDao(dao, calculateDetailCalcFields); // TODO refactor, uses private functions
            bo._fieldOptionsFromDao(dao);
            return bo; 
        }.bind(this));
        
        var aggregateBo = undefined;
        if ( this._willCalculateAggregatedCalcFields ) {
            aggregateBo = this._constructor.call({}, this._db).dao(aggregateDao); 
            aggregateBo._fieldValuesFromDao(aggregateDao, this._calculateAggregatedCalcFields);
        }
        callback(false, bos, aggregateBo);
    }.bind(this));

};

BoSet.prototype.countByConditions = function(conditions, callback) {
    this._daoSet.countByConditions(conditions, callback);
};


exports.BoSet = BoSet;
exports.boSet = boSet;
