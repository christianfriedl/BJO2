/*
 * Copyright (C) 2015,2016 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * SteerGlance is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

const m_customerBo = require('app/customer/customerBo.js');
const m_dao_daoSet = require('dao/daoSet.js');
const m_bo_boSet = require('bo/boSet.js');
const server_DefaultController = require('server/DefaultController.js');
const m_app_customer_customerDao = require('app/customer/customerDao.js');
const m_app_customer_customerBo = require('app/customer/customerBo.js');

function prepare(request, response, responseCallback) {
    return server_DefaultController.prepare(request, response, responseCallback);
}

function edit(request, response, responseCallback) {
    var customerDao = m_app_customer_customerDao.customerDao(request.db);
    var customerBo = m_customerBo.customerBo(customerDao);
    return server_DefaultController.edit(customerBo, request, response, responseCallback);
}

function list(request, response, responseCallback) {
    var customerDao = m_app_customer_customerDao.customerDao(request.db);
    var daoSet = m_dao_daoSet.daoSet(request.db, m_app_customer_customerDao.customerDao);
    var boSet = m_bo_boSet.boSet(request.db, daoSet, m_app_customer_customerBo.customerBo);
    return server_DefaultController.list(boSet, request, response, responseCallback);
}

function saveRow(request, response, responseCallback) {
    var customerDao = m_app_customer_customerDao.customerDao(request.db);
    var customerBo = m_customerBo.customerBo(customerDao);
    return server_DefaultController.saveRow(customerBo, request, response, responseCallback);
}

function saveField(request, response, responseCallback) {
    var customerDao = m_app_customer_customerDao.customerDao(request.db);
    var customerBo = m_customerBo.customerBo(customerDao);
    return server_DefaultController.saveField(customerBo, request, response, responseCallback);
}

function count(request, response, responseCallback) {
    var customerDao = m_app_customer_customerDao.customerDao(request.db);
    var customerBo = m_customerBo.customerBo(customerDao);
    return server_DefaultController.count(customerBo, request, response, responseCallback);
}

exports.prepare = prepare;
exports.edit = edit;
exports.list = list;
exports.saveField = saveField;
exports.saveRow = saveRow;
exports.count = count;
