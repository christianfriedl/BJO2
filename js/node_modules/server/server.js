var http = require('http');
var util = require('util');
var anyBody = require('body/any');

function start() {
    var fs = require('fs');
    var m_db = require('sql/sqlite/db.js');
    http.createServer(function(request, response) {
        util.log('http server req', request);
        if (response.url === '/favicon.ico') return; /////// i don't want this in the log for now (TODO remove it)
        if ( request.method === 'POST' ) {
            anyBody(request, response, function (err, body) {
                if ( err ) {
                    throw err;
                }
                util.log('http server req body', body);
                request.body = body;
                handle(request, response);
            });
        } else {
            handle(request, response);
        }

        function handle(request, response) {
            var db1 = m_db.db('test.db').open('test.db');
            console.log('http request', request.url);
            var router = require('./router.js');
            router.route(request, function(err, moduleName, controllerName, actionName, query) {
                console.log('routed: ' + request.url, 'to', err, moduleName, controllerName, actionName, query);

                if ( err ) {
                    throw err;
                }

                var controllerFileName = './app/' + moduleName + '/' + controllerName + '.js';
                console.log(controllerFileName);
                var controller = require(controllerFileName);
                if ( !controller ) {
                    throw 'controller file ' + controllerFileName + 'not found';
                }

                var method = controller[actionName];
                
                if ( typeof(method) === 'undefined' ) {
                    throw 'method not found';
                }

                var internalRequest = { db: db1, body: request.body, moduleName: moduleName, controllerName: controllerName, actionName: actionName, request: request, url: request.url, query: query };
                var internalResponse = { request: internalRequest, returnCode: 200, contentType: 'text/html', text: null, response: response };

                method(internalRequest, internalResponse, responseCallback);
            });
        }
    }).listen(8888);
}

function responseCallback(internalResponse) {

    internalResponse.request.db.close();
    internalResponse.response.writeHead(internalResponse.returnCode, {"Content-Type": internalResponse.contentType});
    console.log('responseCallback data', internalResponse.data);
    if ( internalResponse.text === null ) { // TODO arg this is a hack
        var data = internalResponse.data; // TODO this should really be cloned...
        data.module = internalResponse.request.moduleName;
        data.controller = internalResponse.request.controllerName;
        data.action = internalResponse.request.actionName;
        internalResponse.text = JSON.stringify(data);
    }
    console.log('responseCallback text', internalResponse.text);
    internalResponse.response.write(internalResponse.text);
    internalResponse.response.end();

}

exports.start = start;
