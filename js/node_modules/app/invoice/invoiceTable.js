"use strict";

var m_sql_table = require('sql/table.js');
var m_sql_field = require('sql/field.js');
var m_sql_fieldLink = require('sql/fieldLink.js');
var m_sql_calcField = require('sql/calcField.js');
var m_sql_lookupField = require('sql/lookupField.js');

function InvoiceTable() {
    /* @DEVELOPMENT { */
        if ( arguments.length !== 0 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be 0'); }
    /* @DEVELOMPENT } */
    m_sql_table.Table.call(this, 'invoice');

    this.field(m_sql_field.field('id', m_sql_field.DataType.int));
    this.field(m_sql_field.field('amount', m_sql_field.DataType.int));
    this.field(m_sql_lookupField.lookupField('customerId', m_sql_field.DataType.int, null, 'customer id', null));
    this._className='app.InvoiceTable';
}


InvoiceTable.prototype = new m_sql_table.Table();
InvoiceTable.prototype.constructor = InvoiceTable;

InvoiceTable.prototype.addLinks = function(customerTable) {
    this.field('customerId').targetLabelField(customerTable.field('lastName'));
    this.field('customerId').link(m_sql_fieldLink.fieldLink(this.field('customerId'), customerTable.field('id'), m_sql_fieldLink.Type.manyToOne));
};

function invoiceTable() { return new InvoiceTable(); }

exports.InvoiceTable = InvoiceTable;
exports.invoiceTable = invoiceTable;
