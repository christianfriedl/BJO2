/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of BJO2.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

"use strict";

var m_dao_primaryDao = require('dao/primaryDao.js');
var m_sql_table = require('sql/table.js');
var m_sql_field = require('sql/field.js');
var m_sql_fieldLink = require('sql/fieldLink.js');
var m_sql_calcField = require('sql/calcField.js');
var m_app_customer_customerTable = require('app/customer/customerTable.js');
var m_app_invoice_invoiceTable = require('app/invoice/invoiceTable.js');
var m_sql_db = require('sql/db.js');

function InvoiceDao(p_db) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */ 
            if ( arguments.length !== 1 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + 1); }
            if ( !(p_db instanceof m_sql_db.DB) ) { throw new Error('Typecheck failure: p_db should be of class m_sql_db.DB: ' + p_db); }
        /* @DEVELOMPENT } */
        var table = m_app_invoice_invoiceTable.invoiceTable();
        var customerTable = m_app_customer_customerTable.customerTable();

        table.addLinks(customerTable);
        customerTable.addLinks(table);

        m_dao_primaryDao.PrimaryDao.call(this, p_db);
        this.table(table);
    } else {
        m_dao_primaryDao.PrimaryDao.call(this);
    }
    this._className='app.InvoiceDao';
}

InvoiceDao.prototype = new m_dao_primaryDao.PrimaryDao();


function invoiceDao(p_db) { if ( arguments.length > 0) { return new InvoiceDao(p_db); } else { return new InvoiceDao(); } }

exports.invoiceDao = invoiceDao;
exports.InvoiceDao = InvoiceDao;
