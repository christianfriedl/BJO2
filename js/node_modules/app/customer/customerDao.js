"use strict";

var m_dao_primaryDao = require('dao/primaryDao.js');
var m_sql_table = require('sql/table.js');
var m_sql_field = require('sql/field.js');
var m_sql_fieldLink = require('sql/fieldLink.js');
var m_sql_calcField = require('sql/calcField.js');
var m_app_customer_customerTable = require('app/customer/customerTable.js');
var m_app_invoice_invoiceTable = require('app/invoice/invoiceTable.js');
var m_sql_db = require('sql/db.js');

function CustomerDao(p_db) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            if ( arguments.length !== 1 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be 1'); }
            console.log('p_db in typecheck', p_db);
            if ( !(p_db instanceof m_sql_db.DB) ) { throw new Error('typecheck failed on p_db'); }  
        /* @DEVELOMPENT } */
        var table = m_app_customer_customerTable.customerTable();
        var invTable = m_app_invoice_invoiceTable.invoiceTable();
        table.addLinks(invTable);
        invTable.addLinks(table);

        m_dao_primaryDao.PrimaryDao.call(this, p_db, table);
    } else {
        m_dao_primaryDao.PrimaryDao.call(this);
    }
    this._className='app.CustomerDao';
}

CustomerDao.prototype = new m_dao_primaryDao.PrimaryDao();
CustomerDao.constructor = CustomerDao;

function customerDao(p_db) { if ( arguments.length > 0 ) { return new CustomerDao(p_db); } else { return new CustomerDao(); } }

exports.customerDao = customerDao;
exports.CustomerDao = CustomerDao;
