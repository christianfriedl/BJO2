/*
 * Copyright (C) 2015 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of BJO2.
 *
 * BJO2 is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/**
 * A LazyFieldLink is a prototype of a fieldLink, that will only create the actual link when its apply() is called
 * - so we can create fieldLinks before we actually have all the fields
 */

"use strict";

var _ = require('underscore');
var m_sql_table = require('sql/table.js');
var m_bjoo = require('BJOObject.js');
var m_sql_fieldLink = require('sql/fieldLink.js');

function LazyFieldLink(/* m_sql_table.Table */ sourceTable, /* string */ sourceFieldName, /* m_sql_table.Table */ targetTable, /* string */ targetFieldName, /* m_sql_fieldLink.Type */ type) {
    m_bjoo.BJOObject.call(this);
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT */ 
        if ( arguments.length !== 5 ) { throw new Error('illegal argument length ' + arguments.length); }
            if ( !(sourceTable instanceof m_sql_table.Table) ) { throw new Error('Typecheck failure: sourceTable should be of class m_sql_table.Table: ' + sourceTable); }
            if ( !(targetTable instanceof m_sql_table.Table) ) { throw new Error('Typecheck failure: targetTable should be of class m_sql_table.Table: ' + targeTable); }
            this._sourceTable = sourceTable;
            this._targetTable = targetTable;
            this._sourceFieldName = sourceFieldName;
            this._targetFieldName = targetFieldName;
            this._type = type;
        /* @DEVELOMPENT } */
    } 
}

function lazyFieldLink(/* m_sql_table.Table */ sourceTable, /* string */ sourceFieldName, /* m_sql_table.Table */ targetTable, /* string */ targetFieldName, /* m_sql_fieldLink.Type */ type) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT */ 
            if ( arguments.length !== 5 ) { throw new Error('illegal argument length ' + arguments.length); }
            if ( !(sourceTable instanceof m_sql_table.Table) ) { throw new Error('Typecheck failure: sourceTable should be of class m_sql_table.Table: ' + sourceTable); }
            if ( !(targetTable instanceof m_sql_table.Table) ) { throw new Error('Typecheck failure: targetTable should be of class m_sql_table.Table: ' + targeTable); }
            return new LazyFieldLink(sourceTable, sourceFieldName, targetTable, targetFieldName, type);
        /* @DEVELOMPENT } */
    }  else {
        return new LazyFieldLink();
    }
}

LazyFieldLink.prototype = new m_bjoo.BJOObject();
LazyFieldLink.prototype.constructor = LazyFieldLink;

//======================================

/**
 * create a link from the lazyFieldLink, and apply this link to the source table/field
 */
LazyFieldLink.prototype.apply = function() {
    var link = m_sql_fieldLink.fieldLink(this._sourceTable.field(this._sourceFieldName), this._targetTable.field(this._targetFieldName), this._type);
    this._sourceTable.field(this._sourceFieldName).link(link);
};

exports.LazyFieldLink = LazyFieldLink;
exports.lazyFieldLink = lazyFieldLink;
