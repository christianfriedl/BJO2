/*
 * Copyright (C) 2015,2016 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * SteerGlance is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

"use strict";

const m_bjoo = require('BJOObject.js');
const m_sql_filter = require('sql/Filter.js');
const m_sql_table = require('sql/Table.js');
const m_sql_orderBy = require('sql/OrderBy.js');


/**
 * NOTE: orderBy is an ARRAY of sql_Field's
 */
function ConditionSet(/* [array(m_sql_filter.Filter)] = [] */ filters, /* [int] = null */ limit, /* [int] = null */ offset, /* [....?] = null */ orderBy) {
    m_bjoo.BJOObject.call(this);

    /* @DEVELOPMENT { */ 
        if ( arguments.length > 4) { throw new Error('Illegal argument length '  + arguments.length + ', should be between 1 and 4'); } 
        if ( !(filters instanceof Array || typeof(filters) === 'undefined') ) { throw new Error('Typecheck failure: filters should be of class Array: ' + filters); }
    /* @DEVELOMPENT } */

    if ( typeof(filters) !== 'undefined' ) {
        this._filters = filters;
    } else {
        this._filters = [];
    }
    if ( typeof(limit) !== 'undefined' ) {
        this._limit = limit;
    } else {
        this._limit = null;
    }
    if ( typeof(offset) !== 'undefined' ) {
        this._offset = offset;
    } else {
        this._offset = null;
    }
    if ( typeof(orderBy) !== 'undefined' ) {
        this._orderBy = orderBy;
    } else {
        this._orderBy = null;
    }
}

function create(/* array(m_sql_filter.Filter) */ filters, /* [int] = null */ limit, /* [int] = null */ offset, /* [....?] = null */ orderBy) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */ 
            if ( arguments.length < 1 || arguments.length > 4) { throw new Error('Illegal argument length '  + arguments.length + ', should be between 1 and 4'); } 
            if ( !(filters instanceof Array) ) { throw new Error('Typecheck failure: filters should be of class Array: ' + filters); }
        /* @DEVELOMPENT } */
        return new ConditionSet(filters, limit, offset, orderBy);
    } else {
        return new ConditionSet();
    }
}

/**
 * @param object webCS { filters: optional, limit: optional, offset: optional, orderBy: optional }
 */
function createFromWeb(/* m_sql_table.Table */ table, /* object */ webCS) {
    /* @DEVELOPMENT { */
        if ( arguments.length !== 2 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + 2); }
        if ( !(table instanceof m_sql_table.Table) ) { throw new Error('Typecheck failure: table should be of class m_sql_table.Table: ' + table); }
    /* @DEVELOMPENT } */
    if ( typeof(webCS.filters) === 'undefined' ) {
        webCS.filters = [];
    }
    return new ConditionSet(m_sql_filter.filtersFromWeb(table, webCS.filters), webCS.limit, webCS.offset, m_sql_orderBy.createFromWeb(table, webCS.orderBy));
};


ConditionSet.prototype = new m_bjoo.BJOObject();
ConditionSet.prototype.constructor = ConditionSet;

exports.ConditionSet = ConditionSet;
exports.create = create;
exports.createFromWeb = createFromWeb;

ConditionSet.prototype.getFilters = function() {
    return this._filters;
};
ConditionSet.prototype.setFilters = function(filters) {
    this._filters = filters;
    return this;
};

ConditionSet.prototype.getLimit = function() {
    return this._limit;
};
ConditionSet.prototype.setLimit = function(limit) {
    this._limit = limit;
    return this;
};

ConditionSet.prototype.getOffset = function(offset) {
    return this._offset;
};
ConditionSet.prototype.setOffset = function(offset) {
    this._offset = offset;
    return this;
};

ConditionSet.prototype.getOrderBy = function() {
    return this._orderBy;
};
ConditionSet.prototype.setOrderBy = function(/* array(field) */ orderBy) {
    /* @DEVELOPMENT { */
        if ( !(orderBy instanceof Array) ) { throw new Error('Typecheck failure: orderBy should be of class Array: ' + orderBy); }
    /* @DEVELOMPENT } */
    this._orderBy = orderBy;
    return this;
};

ConditionSet.prototype.clone = function() {
    return new ConditionSet(this._filters.slice(), this._limit, this._offset, this._orderBy);
};

