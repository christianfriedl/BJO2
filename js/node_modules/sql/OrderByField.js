/*
 * Copyright (C) 2015-2017 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * SteerGlance is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

const _ = require('lodash');
const bjoo = require('BJOObject.js');
const sql_Table = require('sql/Table.js');
const sql_ValueField = require('sql/ValueField.js');
const sql_OrderBy = require('sql/OrderBy.js');

function OrderByField(/*sql_ValueField.ValueField */ field, /* sql_OrderBy.Direction */ direction) {
    bjoo.BJOObject.apply(this);

    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            if ( arguments.length !== 2 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + 2); }
            if ( !(field instanceof sql_ValueField.ValueField) ) { throw new Error('Typecheck failure: field should be of class sql_field.Field: ' + field); }
        /* @DEVELOMPENT } */

        this._field = field;
        this._direction = direction;
    }
}

function create(/*sql_ValueField.ValueField */ field, /* sql_OrderBy.Direction */ direction) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            if ( arguments.length !== 2 ) { throw new Error('Illegal argument length '  + arguments.length + ', should be ' + 2); }
            if ( !(field instanceof sql_ValueField.ValueField) ) { throw new Error('Typecheck failure: field should be of class sql_field.Field: ' + field); }
        /* @DEVELOMPENT } */

        return new OrderByField(field, direction);
    } else {
        return new OrderByField();
    }
}

OrderByField.prototype = new bjoo.BJOObject();
OrderByField.prototype.constructor = OrderByField;

OrderByField.prototype.getField = function() {
    return this._field;
};
OrderByField.prototype.setField = function(/* sql_ValueField.ValueField */ field) {
    this._field = field;
    return this;
};

OrderByField.prototype.getDirection = function() {
    return this._direction;
};
OrderByField.prototype.setDirection = function(/* OrderBy.Direction */ direction) {
    this._direction = direction;
    return this;
};

exports.OrderByField = OrderByField;
exports.create = create;
