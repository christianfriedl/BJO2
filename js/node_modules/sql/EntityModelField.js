/*
 * Copyright (C) 2015,2016 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * Mapitor is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

"use strict";

var _ = require('lodash');

var model_EntitySetModel = require('model/EntitySetModel.js');
const sql_Field = require('sql/Field.js');
var sql_ValueField = require('sql/ValueField.js');
var sql_Query = require('sql/Query.js');

function EntityModelField() {
    sql_ValueField.ValueField.call(this);
}

/**
 * @param name the name of this field
 * @param lookupField the field where the id to our lookup table is stored
 */
function create(/* String */ name, /* sql_LookupField.LookupField */ lookupField) {
    if ( arguments.length > 0 ) {
        /* @DEVELOPMENT { */
            if ( arguments.length !== 3 ) { throw new Error('arguments.length must be 3'); }
        /* @DEVELOMPENT } */
        const field = new EntityModelField();
        field.setName(name);
        field.setLookupField(lookupField);
        field.setIsPersistent(false);
        // ??? TODO what data type...? field.setDataType(sql_Field.DataType.int);
        return field;
    }  else {
        return new EntityModelField();
    }
}

exports.EntityModelField = EntityModelField;
exports.create = create;

EntityModelField.prototype = new sql_ValueField.ValueField();
EntityModelField.prototype.constructor = EntityModelField;

EntityModelField.getLookupField = function() {
    return this._lookupField;
};
EntityModelField.getLookupField = function(lookupField) {
    this._lookupField = lookupField;
    return this;
};
