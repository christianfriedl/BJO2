/*
 * Copyright (C) 2015,2016 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * SteerGlance is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Model will put its data into its _data property
 */

"use strict";

const _ = require('lodash');

function Model(/* Object */ data) {
    this._data = data;
    _.each(
        _.filter(_.keys(object), ( key ) => {
            return _.isNumber(object[key]) || _.isString(object[key]);
        }),
        ( key ) => {
            _createAccessors(this, data, key);
        });
}

Model.prototype = {};
Model.prototype.constructor = Model;


function create(/* Object */ data) {
    return new Model(data);
}

function _createAccessors(model, object, key) {
    model['get' + key.substr(0, 1).toUpperCase() +  key.substr(1)] = function() { return this._data[key]; }.bind(model);
    model['set' + key.substr(0, 1).toUpperCase() +  key.substr(1)] = function(val) { this._data[key] = val; return this; }.bind(model);
}

exports.create = create;
