/*
 * Copyright (C) 2015-2017 Christian Friedl <Mag.Christian.Friedl@gmail.com>
 *
 * This file is part of SteerGlance.
 *
 * SteerGlance is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

"use strict";

const async = require('async');
const _ = require('lodash');
const q = require('q');
const sql_ConditionSet = require('sql/ConditionSet.js');
const bjoo = require('BJOObject.js');

/**
 * @class web.server.ErrorController
 * @construcor
 */
function ErrorController() {
    bjoo.BJOObject.call(this);
}

function create() {
    return new ErrorController();
}

ErrorController.prototype = new bjoo.BJOObject();
ErrorController.prototype.constructor = ErrorController;
exports.ErrorController = ErrorController;
exports.create = create;

/**
 * The edit action
 * @method edit
 * @param {entity.EntitySet} entitySet
 * @param {Object} request
 * @param {Object} response we receive a respnse, which we will then amend
 */
ErrorController.prototype.errorAction = function(request, response) {
    /*
    const filePath = this._config.web.server.documentRoot + '/html/error.html';

    return deps.q.nfbind(deps.fs.readFile)(filePath, 'utf8').then( (text) => {
        return deps._.merge(response, { text: text });
    });
    */

    response.returnCode = 400;
    response.text = 'An error occurred: ' + request.error;
    return q(response);
}

