"use strict";

const _ = require('lodash');

function Entity(/* Object */ data) {
    this._data = data;
}

Entity.prototype = {};
Entity.prototype.constructor = Entity;


function createEntity(/* Object */ object) {
    let entity = new Entity(object);
    _.each(
        _.filter(_.keys(object), ( key ) => {
            return _.isNumber(object[key]) || _.isString(object[key]);
        }),
        ( key ) => {
            createAccessors(entity, object, key);
        });
    return entity;
}

function createAccessors(entity, object, key) {
    entity['get' + key.substr(0, 1).toUpperCase() +  key.substr(1)] = function() { return this._data[key]; }.bind(entity);
    entity['set' + key.substr(0, 1).toUpperCase() +  key.substr(1)] = function(val) { this._data[key] = val; return this; }.bind(entity);
}


exports.createEntity = createEntity;
