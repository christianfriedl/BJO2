* We need to clone the table upon entity creation, or find another way to create new tables for new entities -- DONE;entity
* return promises for getters; test it -- DONE;server
* spread all resulting fields over an object by request -- TODO
* Entity.getAllAttributes, .getAllAttributesAsList, .getAttributes, .getAtributesAsList -- TODO
* LookupField -- TODO
* CalcField -- TODO
* ZoomField - opposite of LookupField -- DONE
* SumField  -- TODO;sql;fields
* CountField  -- TODO;sql;fields
* REFLECT: do we need to extend LookupField to look into any field, or just the id (as it is now)? -- TODO
* REFLECT: possibly, LookupField should get the value-label from the master field too -- TODO
* bjooobject should prescribe a clone() method -- REJECTED
* table.getFieldLinks() seems pretty stupid -- TODO
* ditto: table._labelFields and lookupfields in general -- TODO
* ditto: table._fieldLinks -- TODO
* the table given to EntitySetModel now has to already have an id field, because it is used to create the query() before the constructor gets called... should automatically add an id field! -- TODO
* move sql_Field and its descendants, and sql_Table, into a new namespace table -- TODO;refactor
* REFLECT: do we want to be able to save() via a ZoomField, i.e. customer.setInvoices([inv1, inv2,...]); customer.save().then(...); ??? -- TODO;reflect;model
* sql_Filter: 80:  return this._compareTo.value(); // TODO OOOOPS this will not fly!!! it returns a promise now
